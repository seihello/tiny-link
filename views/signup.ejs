<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"
      integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"
      crossorigin="anonymous"
    />

    <title>Sign Up - TinyLinks</title>

    <style>
      body {
        overflow: hidden;
      }
      ::-webkit-scrollbar {
        width: 7px;
      }

      ::-webkit-scrollbar-thumb {
        background-color: #cccccc;
        border-radius: 5px;
      }
      @keyframes moveY {
        0% {
          transform: translateY(0);
        }
        50% {
          transform: translateY(30px);
        }
        100% {
          transform: translateY(0);
        }
      }

      @keyframes moveX {
        0% {
          transform: translateX(0);
        }
        50% {
          transform: translateX(30px);
        }
        100% {
          transform: translateX(0);
        }
      }

      .blurred-shape {
        position: absolute;
        width: 600px;
        height: 600px;
        z-index: -1;
        background: rgba(
          255,
          0,
          0,
          0.3
        ); /* red color, adjust the color as needed */
        border-radius: 50%;
        filter: blur(100px);
        animation: moveY 5s infinite;
      }

      .blurred-shape:nth-child(odd) {
        animation: moveX 6s infinite;
        background: rgba(0, 0, 255, 0.2); /* blue color */
      }

      .unfulfilled {
        color: red;
      }

      .fulfilled {
        color: green;
      }
      .error-message {
        color: red;
      }
      .password-input {
        display: flex;
        align-items: center;
        position: relative;
      }

      .password-input input {
        flex: 1;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 6px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }

      .password-input .show-password-button {
        background-color: transparent;
        border: none;
        padding: 6px 10px;
        cursor: pointer;
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
      }
      .show-password-button {
        background-color: transparent;
        border: none; /* Remove the border */
        padding: 6px 10px;
        cursor: pointer;
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
      }
      @media screen and (max-width: 1000px) {
        .blurred-shape {
          display: none;
        }
        body {
          overflow-y: hidden;
          background: linear-gradient(to bottom, #add8e6, #00008b);
          height: 100vh;
          background-size: cover;
          background-position: center center;
          background-repeat: no-repeat;
        }
      }
    </style>
  </head>

  <body>
    <%- include('partials/header.ejs') %>

    <main class="container" style="margin-top: 1rem; padding-bottom: 100px">
      <div class="blurred-shape" style="top: 100px; left: 100px"></div>
      <div class="blurred-shape" style="top: 400px; right: 300px"></div>
      <div class="blurred-shape" style="top: -200px; right: 50px"></div>
      <div class="row justify-content-center">
        <div class="col-md-6">
          <div class="card">
            <div class="card-header text-center font-weight-bold">
              Sign Up to TinyLinks
            </div>
            <div class="card-body" style="overflow-y: auto; max-height: 70vh">
              <form action="/signup" method="POST">
                <div class="form-group">
                  <label for="name">Name</label>
                  <input
                    type="text"
                    class="form-control"
                    id="name"
                    placeholder="Enter name"
                    name="name"
                  />
                </div>
                <div class="form-group">
                  <label for="email">Email</label>
                  <input
                    type="email"
                    class="form-control"
                    id="email"
                    placeholder="Enter email"
                    name="email"
                    oninput="clearEmail()"
                  />
                  <% if (locals.emailErrorMessage) { %>
                  <p class="error-message" id="emailErrorMessage">
                    <%= emailErrorMessage %>
                  </p>
                  <% } %>
                </div>

                <div class="form-group">
                  <label for="password">Password</label>
                  <div class="password-input">
                    <input
                      type="password"
                      class="form-control"
                      id="password"
                      placeholder="Enter password"
                      name="password"
                    />
                    <button
                      type="button"
                      id="showPasswordButton"
                      class="show-password-button"
                    >
                      Show
                    </button>
                  </div>
                </div>
                <div id="password-requirements">
                  <p>Password Requirements:</p>
                  <ul>
                    <li class="requirement-line" id="length-check">
                      <span class="requirement-label"
                        >At least 8 characters</span
                      >
                      <span class="requirement-status unfulfilled">✗</span>
                    </li>
                    <li class="requirement-line" id="uppercase-check">
                      <span class="requirement-label"
                        >At least one uppercase letter (A-Z)</span
                      >
                      <span class="requirement-status unfulfilled">✗</span>
                    </li>
                    <li class="requirement-line" id="lowercase-check">
                      <span class="requirement-label"
                        >At least one lowercase letter (a-z)</span
                      >
                      <span class="requirement-status unfulfilled">✗</span>
                    </li>
                    <li class="requirement-line" id="digit-check">
                      <span class="requirement-label"
                        >At least one digit (0-9)</span
                      >
                      <span class="requirement-status unfulfilled">✗</span>
                    </li>
                    <li class="requirement-line" id="specialchar-check">
                      <span class="requirement-label"
                        >At least one special character
                      </span>
                      <span class="requirement-status unfulfilled">✗</span>
                    </li>
                  </ul>
                </div>

                <div class="form-group">
                  <label for="confirmPassword">Confirm Password</label>
                  <div class="password-input">
                    <input
                      type="password"
                      class="form-control"
                      id="confirmPassword"
                      name="confirmPassword"
                      placeholder="Confirm password"
                    />
                    <button
                      type="button"
                      id="showConfirmButton"
                      class="show-password-button"
                    >
                      Show
                    </button>
                  </div>
                </div>

                <button type="submit" class="btn btn-primary btn-block">
                  Sign Up
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </main>

    <%- include('partials/footer.ejs', { footerClass: 'fixed-bottom' }) %>

    <!-- Bootstrap JS -->
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"
    ></script>
    <script>
      const passwordInput = document.getElementById("password");
      const confirmPasswordInput = document.getElementById("confirmPassword");

      const requirementLines = document.querySelectorAll(".requirement-line");
      const showPasswordButton = document.getElementById("showPasswordButton");
      const showConfirmButton = document.getElementById("showConfirmButton");

      showPasswordButton.addEventListener("click", () => {
        if (passwordInput.type === "password") {
          passwordInput.type = "text";
          showPasswordButton.textContent = "Hide";
        } else {
          passwordInput.type = "password";
          showPasswordButton.textContent = "Show";
        }
      });
      showConfirmButton.addEventListener("click", () => {
        if (confirmPasswordInput.type === "password") {
          confirmPasswordInput.type = "text";
          showConfirmButton.textContent = "Hide";
        } else {
          confirmPasswordInput.type = "password";
          showConfirmButton.textContent = "Show";
        }
      });

      function initializeRequirements() {
        for (const line of requirementLines) {
          updateRequirementLine(line, false);
        }
      }

      function validatePasswords() {
        const password = passwordInput.value;

        const hasUppercase = /[A-Z]/.test(password);
        const hasLowercase = /[a-z]/.test(password);
        const hasDigit = /\d/.test(password);
        const hasSpecialChar = /[@$!%*?&]/.test(password);
        const hasLength = password.length >= 8;

        for (const line of requirementLines) {
          const requirementID = line.id;
          const isValid =
            (requirementID === "length-check" && hasLength) ||
            (requirementID === "uppercase-check" && hasUppercase) ||
            (requirementID === "lowercase-check" && hasLowercase) ||
            (requirementID === "digit-check" && hasDigit) ||
            (requirementID === "specialchar-check" && hasSpecialChar);

          updateRequirementLine(line, isValid);
        }
      }

      function updateRequirementLine(line, isValid) {
        const statusIcon = line.querySelector(".requirement-status");

        if (isValid) {
          line.classList.remove("unfulfilled");
          line.classList.add("fulfilled");
          statusIcon.textContent = "✓"; // Change to green tick
          statusIcon.style.color = "green";
        } else {
          line.classList.remove("fulfilled");
          line.classList.add("unfulfilled");
          statusIcon.textContent = "✗"; // Change back to red cross
          statusIcon.style.color = "red";
        }
      }
      function clearEmail() {
        const emailErrorMessageElement =
          document.getElementById("emailErrorMessage");
        if (emailErrorMessageElement) {
          emailErrorMessageElement.textContent = "";
        }
      }

      initializeRequirements();

      passwordInput.addEventListener("keyup", validatePasswords);
      confirmPasswordInput.addEventListener("keyup", validatePasswords);
    </script>
  </body>
</html>
